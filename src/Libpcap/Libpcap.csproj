<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net7.0</TargetFramework>
        <RuntimeIdentifiers>linux-x64;osx-x64;win-x86;win-x64</RuntimeIdentifiers>
        <NoWarn>$(NoWarn);CS8981</NoWarn>

        <PackageId>Libpcap</PackageId>
        <Description>Libpcap/Npcap wrapper for .NET.</Description>
        <PackageTags>libpcap; packet-capture</PackageTags>

        <IncludeBuildOutput>false</IncludeBuildOutput>
        <IncludeSymbols>false</IncludeSymbols>
    </PropertyGroup>

    <!-- We're building a reference assembly -->
    <PropertyGroup Condition="'$(LibpcapIsBuildingReferenceAssembly)' == 'True'">
        <DefineConstants>$(DefineConstants);REFERENCE_ASSEMBLY</DefineConstants>
        <ProduceOnlyReferenceAssembly>true</ProduceOnlyReferenceAssembly>
        <Deterministic>true</Deterministic>
        <IsPackable>false</IsPackable>
    </PropertyGroup>

    <!-- Attempt to determine for which runtime we're building if it wasn't specified -->
    <PropertyGroup Condition="'$(RuntimeIdentifier)' == '' AND '$(LibpcapIsBuildingReferenceAssembly)' != 'True'">
        <RuntimeIdentifier Condition="$([MSBuild]::IsOSPlatform('Linux')) AND '$([System.Environment]::Is64BitOperatingSystem)' == 'True'">linux-x64</RuntimeIdentifier>
        <RuntimeIdentifier Condition="$([MSBuild]::IsOSPlatform('OSX')) AND '$([System.Environment]::Is64BitOperatingSystem)' == 'True'">osx-x64</RuntimeIdentifier>
        <RuntimeIdentifier Condition="$([MSBuild]::IsOSPlatform('Windows')) AND '$([System.Environment]::Is64BitOperatingSystem)' == 'True'">win-x64</RuntimeIdentifier>
        <RuntimeIdentifier Condition="$([MSBuild]::IsOSPlatform('Windows')) AND '$([System.Environment]::Is64BitOperatingSystem)' == 'False'">win-x86</RuntimeIdentifier>
    </PropertyGroup>
    
    <!-- Define constant indicating for which runtime we're building -->
    <PropertyGroup>
        <DefineConstants Condition="'$(RuntimeIdentifier)' == 'linux-x64'">$(DefineConstants);LINUX_X64</DefineConstants>
        <DefineConstants Condition="'$(RuntimeIdentifier)' == 'osx-x64'">$(DefineConstants);OSX_X64</DefineConstants>
        <DefineConstants Condition="'$(RuntimeIdentifier)' == 'win-x64'">$(DefineConstants);WIN_X64</DefineConstants>
        <DefineConstants Condition="'$(RuntimeIdentifier)' == 'win-x86'">$(DefineConstants);WIN_X86</DefineConstants>
    </PropertyGroup>
    
    <!-- Build artifacts for each supported runtime that isn't currently being built -->
    <Target Name="LibpcapBuildForEachRuntimeIdentifier" BeforeTargets="AfterBuild" Condition="'$(LibpcapIsBuildingExtraRuntime)' != 'True' AND '$(LibpcapIsBuildingReferenceAssembly)' != 'True'">
        <MSBuild Projects="../Libpcap/Libpcap.csproj" Targets="Build" Properties="RuntimeIdentifier=linux-x64;LibpcapIsBuildingExtraRuntime=True" Condition="'$(RuntimeIdentifier)' != 'linux-x64'" />
        <MSBuild Projects="../Libpcap/Libpcap.csproj" Targets="Build" Properties="RuntimeIdentifier=osx-x64;LibpcapIsBuildingExtraRuntime=True" Condition="'$(RuntimeIdentifier)' != 'osx-x64'" />
        <MSBuild Projects="../Libpcap/Libpcap.csproj" Targets="Build" Properties="RuntimeIdentifier=win-x86;LibpcapIsBuildingExtraRuntime=True" Condition="'$(RuntimeIdentifier)' != 'win-x86'" />
        <MSBuild Projects="../Libpcap/Libpcap.csproj" Targets="Build" Properties="RuntimeIdentifier=win-x64;LibpcapIsBuildingExtraRuntime=True" Condition="'$(RuntimeIdentifier)' != 'win-x64'" />
        <MSBuild Projects="../Libpcap/Libpcap.csproj" Targets="Build" Properties="LibpcapIsBuildingReferenceAssembly=True" />
    </Target>
    
    <Target Name="LibpcapIncludeBuiltArtifacts" BeforeTargets="_GetPackageFiles"> <!-- Is there a better target? GenerateNuspecDependsOn seems to be too late -->
        <!-- Include built artifacts -->
        <ItemGroup>
            <Content Include="bin/$(Configuration)/net7.0/*.dll" Pack="true" PackagePath="ref" />

            <Content Include="bin/$(Configuration)/net7.0/linux-x64/*.dll" Pack="true" PackagePath="runtimes/linux-x64/lib/net7.0" />
            <Content Include="bin/$(Configuration)/net7.0/linux-x64/*.pdb" Pack="true" PackagePath="runtimes/linux-x64/lib/net7.0" />

            <Content Include="bin/$(Configuration)/net7.0/osx-x64/*.dll" Pack="true" PackagePath="runtimes/osx-x64/lib/net7.0" />
            <Content Include="bin/$(Configuration)/net7.0/osx-x64/*.pdb" Pack="true" PackagePath="runtimes/osx-x64/lib/net7.0" />

            <Content Include="bin/$(Configuration)/net7.0/win-x64/*.dll" Pack="true" PackagePath="runtimes/win-x64/lib/net7.0" />
            <Content Include="bin/$(Configuration)/net7.0/win-x64/*.pdb" Pack="true" PackagePath="runtimes/win-x64/lib/net7.0" />

            <Content Include="bin/$(Configuration)/net7.0/win-x86/*.dll" Pack="true" PackagePath="runtimes/win-x86/lib/net7.0" />
            <Content Include="bin/$(Configuration)/net7.0/win-x86/*.pdb" Pack="true" PackagePath="runtimes/win-x86/lib/net7.0" />
        </ItemGroup>
    </Target>

</Project>
